services:
  chat:
    build: chat-server
    restart: always
    env_file: .env
    volumes:
      - ./chat-server:/app/srcs
      - ./conversation:/conversation
      - ./logs:/logs
    command: [ "uvicorn", "main:app", "--reload", "--host=0.0.0.0", "--port=3000" ]
    profiles:
      - all
      - chat

  recommendation:
    build: recommendation
    restart: always
    env_file: .env
    ports:
      - ${REC_PORT}:3000
    volumes:
      - ./recommendation:/app/srcs
      - ./logs:/logs
      - ./data:/app/srcs/data
    command: [ "uvicorn", "main:app", "--reload", "--host=0.0.0.0", "--port=3000" ]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    profiles:
      - recommendation

  summary:
    build: summary
    restart: always
    env_file: .env
    volumes:
      - ./summary:/app/srcs
      - ./conversation:/conversation
      - ./logs:/logs
    command: [ "uvicorn", "main:app", "--reload", "--host=0.0.0.0", "--port=3000" ]
    profiles:
      - all
      - summary

  nginx:
    image: nginx:latest
    restart: always
    env_file: .env
    volumes:
      - ./upstream.conf:/etc/nginx/upstream.conf:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conversation:/usr/share/nginx/html/chat/log
    ports:
      - ${MAIN_PORT}:80
    command: [ "/bin/sh", "-c", "envsubst < /etc/nginx/upstream.conf > /etc/nginx/conf.d/upstream.conf && exec nginx -g 'daemon off;'" ]
    profiles:
      - all
      - chat
      - summary

  utils:
    build: utils
    env_file: .env
    stdin_open: true
    tty: true
    volumes:
      - ./utils:/app/srcs
      - ./firebase-key.json:/app/srcs/firebase-key.json
    command: [ "python", "main.py" ]
    profiles:
      - util
